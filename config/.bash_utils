#!/usr/bin/env bash

UTILS_LOADED=1

# Get side-by-side diff only showing diffs
diffy(){
    diff $1 $2 -y --color --suppress-common-lines
}

# 'gs' aliased to gitsync
function gs(){
    gitsync "$1" "$2"
}

function tmux_init(){
    bash ~/.tmux_init.sh 2>/dev/null
    tmux attach-session -t Main 2>/dev/null
}

function config_sync(){

    LOCAL_REPO=~/my_repos/Dev-Environment

    # Sync local config files with cloned repo so i can push up my changes
    if [[ ! -d $LOCAL_REPO/config/ ]]; then
        mkdir -p $LOCAL_REPO/config/
    fi
    DEST=$LOCAL_REPO/config/
    cp -v ~/.bash_aliases  $DEST
    cp -v ~/.bash_git  $DEST
    cp -v ~/.bash_pbx  $DEST
    cp -v ~/.bash_utils  $DEST
    cp -v ~/.bashrc  $DEST
    # cp -v -r ~/.oh-my-zsh  $DEST
    cp -v ~/.p10k.zsh  $DEST
    cp -v ~/.tmux.conf  $DEST
    cp -v ~/.vimrc  $DEST
    cp -v ~/.zshrc   $DEST
    cp -v ~/.zsh_customizations   $DEST
    cp -v ~/.tmux_init.sh  $DEST
    cp -v -r ~/.config/lazydocker/  $DEST/.config/
    cp -v -r ~/.config/lazygit/  $DEST/.config/
    cp -v -r ~/.config/nvim/  $DEST/.config/
    cp -v -r ~/.config/nvim-lazy/  $DEST/.config/
    cp -v -r ~/.config/posting/  $DEST/.config/
    cp -v -r ~/.config/yazi/  $DEST/.config/

    # cp -v -r ~/.config/  $DEST
    #    cp -v -r ~/.local/share/nvim/dadbod_ui/  $DEST

    DEST=$LOCAL_REPO/
    cp -v -r ~/posting/  $DEST

    DEST=$LOCAL_REPO/config/usr_local_bin/
    cp /usr/local/bin/* $DEST

    echo "Done!"
}


function config_sync_alpha(){

    # Sync local config files with cloned repo so i can push up my changes
    scp ~/.bash_aliases  alpha:/home/ubuntu/
    scp ~/.bash_git  alpha:/home/ubuntu/
    scp ~/.bash_pbx  alpha:/home/ubuntu/
    scp ~/.bash_utils  alpha:/home/ubuntu/
    scp ~/.bashrc  alpha:/home/ubuntu/
    #scp -r ~/.oh-my-zsh  alpha:/home/ubuntu/
    scp ~/.p10k.zsh  alpha:/home/ubuntu/
    scp ~/.tmux.conf  alpha:/home/ubuntu/
    scp ~/.vimrc  alpha:/home/ubuntu/
    scp ~/.zshrc   alpha:/home/ubuntu/
    scp ~/.tmux_init.sh  alpha:/home/ubuntu/

    scp /usr/local/bin/* alpha:/usr/local/bin

    echo "Done!"
}



# cd + ls
tere() {

    local result=$(command tere "$@")
    [ -n "$result" ] && cd -- "$result"

}

# Set base for posting
export POSTING_ROOT=/home/bobby/posting/
export POSTING_EDITOR=vim

# Copy from WSL to Windows host
function wcp(){

    WIN_FOLDER=/mnt/c/Users/BobbyValenzuela/Downloads/WSL/
    WSL_FOLDER=~/WIN/

    [ ! -d $WIN_FOLDER ] && mkdir -p $WIN_FOLDER
    [ ! -d $WSL_FOLDER ] && mkdir -p $WSL_FOLDER

    # Get the full path of the file
    full_path=$(realpath "$$1" 2>/dev/null || readlink -f "$$1" 2>/dev/null)

    DEST=



    # Check if full_path is not empty
    if [ -n "$full_path" ]; then
    
        # if there's a path, use that 
        if [[ ! -z "$2" ]]; then
            DEST=$2
        else

            # If this is a windows file, send to WSL folder
            if [[ "$full_path" == /mnt/c/* ]]; then
                DEST=$WSL_FOLDER
            else
                DEST=$WIN_FOLDER
            fi

        fi
            # Now that we have a destination set, copy to DEST
            cp -r -v $1 $DEST

    else
        echo "Error: File '$file' does not exist or cannot be resolved."
    fi
}

function tt(){
   cd ~/my_repos/Tomahawk/
   ~/my_repos/Tomahawk/tomahawk
}

function clear_nvim_swaps(){
    find ~/.local/state/nvim/swap -iname "*.swp" -exec rm -v '{}' \;
}

function y() {
	local tmp="$(mktemp -t "yazi-cwd.XXXXXX")" cwd
	yazi "$@" --cwd-file="$tmp"
	# yz "$@" --cwd-file="$tmp" # Using local yazi in /usr/local/bin/yz
	IFS= read -r -d '' cwd < "$tmp"
	[ -n "$cwd" ] && [ "$cwd" != "$PWD" ] && builtin cd -- "$cwd"
	rm -f -- "$tmp"
}
